query findProduct($handle: String, $pathQuery: String) {
   product(handle: $handle) {
      id
      title
      handle
      descriptionHtml
      tags
      noindex: metafield(namespace: "seo", key: "hidden") {
         value
      }
      rating: metafield(namespace: "reviews", key: "rating") {
         value
      }
      reviewsCount: metafield(namespace: "reviews", key: "rating_count") {
         value
      }
      breadcrumbs: metafield(namespace: "ifixit", key: "breadcrumbs") {
         value
      }
      faqs: metafield(namespace: "custom", key: "faq") {
         value
      }
      prop65WarningType: metafield(
         namespace: "ifixit"
         key: "prop_65_warning_type"
      ) {
         value
      }
      prop65Chemicals: metafield(
         namespace: "ifixit"
         key: "prop_65_chemicals"
      ) {
         value
      }
      productVideos: metafield(namespace: "ifixit", key: "product_videos") {
         value
      }
      productVideosJson: metafield(
         namespace: "ifixit"
         key: "product_videos_json"
      ) {
         value
      }
      replacementGuides: metafield(
         namespace: "ifixit"
         key: "replacement_guides"
      ) {
         value
      }
      featuredProductVariants: metafield(
         namespace: "ifixit"
         key: "featured_products_ref"
      ) {
         references(first: 25) {
            nodes {
               __typename
               ...ProductPreviewFields
            }
         }
      }
      compatibility: metafield(namespace: "ifixit", key: "compatibility_json") {
         value
      }
      metaTitle: metafield(namespace: "ifixit", key: "meta_title") {
         value
      }
      shortDescription: metafield(
         namespace: "ifixit"
         key: "short_description"
      ) {
         value
      }
      oemPartnership: metafield(
         namespace: "ifixit"
         key: "oem_partnership_json"
      ) {
         value
      }
      enabledDomains: metafield(namespace: "ifixit", key: "enabled_domains") {
         value
      }
      images(first: 250) {
         nodes {
            id
            altText
            height
            width
            url
         }
      }
      options {
         ...ProductOptionFields
      }
      variants(first: 100) {
         nodes {
            ...ProductVariantFields
         }
      }
      vendor
   }
   urlRedirects(first: 1, query: $pathQuery) {
      edges {
         node {
            target
         }
      }
   }
}

fragment ProductOptionFields on ProductOption {
   id
   name
   values
}
